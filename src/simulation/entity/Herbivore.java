package simulation.entity;

import simulation.Coordinates;
import simulation.PathFinder;
import simulation.SimulationMap;

import java.util.LinkedList;

public class Herbivore extends Creature {

    private SimulationMap map;
    private LinkedList<Coordinates> path;
    private PathFinder pathFinder = new PathFinder();
    public Herbivore(int x, int y, SimulationMap map) {
        super(x, y);
        this.map = map;
    }

    @Override
    public boolean isTarget(Entity entity) {
        return entity instanceof Grass;
    }

    @Override
    public String toString() {
        return "\uD83D\uDC16"; // –¢—Ä–∞–≤–æ—è–¥–Ω–æ–µ - üêñ
    }


    @Override
    public void makeMove(SimulationMap map) {

        int oldX = this.getX();
        int oldY = this.getY();

        // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Ç—Ä–∞–≤–æ—è–¥–Ω–æ–≥–æ
        if (this.path == null || this.path.isEmpty()) {
            // –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω –ø—É—Ç—å –∏–ª–∏ –ø—É—Ç—å —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–∞–π–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—É—Ç—å –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ç—Ä–∞–≤—è–Ω–æ–≥–æ.
            this.path = new LinkedList<>(pathFinder.findPath(new Coordinates(oldX, oldY), this, map));
        }

        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø–æ –ø—É—Ç–∏, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.
        if (!this.path.isEmpty()) {
            Coordinates nextStep = this.path.removeFirst();

            // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∫–∞—Ä—Ç—ã
            if (map.isWithinBounds(nextStep.getX(), nextStep.getY())) {
                // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–≤–æ–±–æ–¥–Ω–∞ –ª–∏ –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
                if (map.getObject(nextStep.getX(), nextStep.getY()) == null)  {
                    // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
                    map.moveCreature(this, nextStep.getX(), nextStep.getY());
                }
            }
        }
        map.updateEntityLocation(this, oldX, oldY);
        System.out.println("Herbivore moving");
    }


}