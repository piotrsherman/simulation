package simulation.entity;
import simulation.Coordinates;
import simulation.PathFinder;
import simulation.SimulationMap;
import java.util.LinkedList;
public class Herbivore extends Creature {
    private SimulationMap map;
    private LinkedList<Coordinates> path;
    private PathFinder pathFinder = new PathFinder();
    public Herbivore(int x, int y, SimulationMap map) {
        super(x, y);
        this.map = map;
    }
    @Override
    public boolean isTarget(Entity entity) {
        return entity instanceof Grass;
    }
    @Override
    public String toString() {
        return "\uD83D\uDC16"; // –¢—Ä–∞–≤–æ—è–¥–Ω–æ–µ - üêñ
    }
    @Override
    public void makeMove(SimulationMap map) {
        int oldX = this.getX();
        int oldY = this.getY();
        if (this.path == null || this.path.isEmpty()) {
            this.path = new LinkedList<>(pathFinder.findPath(new Coordinates(oldX, oldY), this, map));
            this.path.removeFirstOccurrence(new Coordinates(oldX, oldY)); // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –ø—É—Ç–∏
        }
        if (!this.path.isEmpty()) {
            Coordinates nextStep = this.path.peekFirst();  // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –Ω–µ —É–¥–∞–ª—è—è –µ–≥–æ –∏–∑ –ø—É—Ç–∏
            if (map.isWithinBounds(nextStep.getX(), nextStep.getY())) {
                Entity entityAtNextStep = map.getObject(nextStep.getX(), nextStep.getY());
                if (entityAtNextStep instanceof Grass) {
                    System.out.println("eating");
                    eat(nextStep);  // –°—ä–µ—Å—Ç—å —Ç—Ä–∞–≤—É –∏ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å—Å—è –Ω–∞ –µ—ë –º–µ—Å—Ç–æ
                    this.path.clear();  // –ü—É—Ç—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —Ö–æ–¥—É
                } else if (entityAtNextStep == null) {
                    System.out.println("Moving to next positoin");
                    this.path.removeFirst();  // –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è, –µ—Å–ª–∏ —Å–ª–µ–¥—É—é—â–∞—è –∫–ª–µ—Ç–∫–∞ —Å–≤–æ–±–æ–¥–Ω–∞
                    map.moveCreature(this, nextStep.getX(), nextStep.getY());
                }
            }
        }
        map.updateEntityLocation(this, oldX, oldY);
        System.out.println("Herbivore moving");
    }
    public void eat(Coordinates grassPosition) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ –¥–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –µ—Å—Ç—å —Ç—Ä–∞–≤–∞
        Entity entity = map.getObject(grassPosition.getX(), grassPosition.getY());
        if (entity instanceof Grass) {
            // –£–±–∏—Ä–∞–µ–º —Ç—Ä–∞–≤—É (Grass) —Å –∫–∞—Ä—Ç—ã
            map.removeEntity(grassPosition.getX(), grassPosition.getY());
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º Herbivore –Ω–∞ –ø–æ–∑–∏—Ü–∏—é, –≥–¥–µ –±—ã–ª–∞ —Ç—Ä–∞–≤–∞
            this.moveTo(grassPosition.getX(), grassPosition.getY());
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∏–ª–∏ –æ—á–∫–æ–≤ Herbivore, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        }
    }
}