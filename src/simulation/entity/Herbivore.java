package simulation.entity;

import simulation.SimulationMap;

public class Herbivore extends Creature {

    private SimulationMap map;
    public Herbivore(int x, int y, SimulationMap map) {
        super(x, y);
        this.map = map;
    }

    @Override
    public String toString() {
        return "\uD83D\uDC16"; // –¢—Ä–∞–≤–æ—è–¥–Ω–æ–µ - üêñ
    }

    public void findClosestGrass() {
        Entity closestGrass = null;
        double closestDistance = Double.MAX_VALUE;

        for (Entity entity : map.getEntities()) {
            if (entity instanceof Grass) {
                double distance = getDistance(this, entity);
                if (distance < closestDistance) {
                    closestGrass = entity;
                    closestDistance = distance;
                }
            }
        }

        if (closestGrass != null) {
            System.out.println("–ë–ª–∏–∂–∞–π—à–∏–π –æ–±—ä–µ–∫—Ç Grass –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º: (" + closestGrass.getX() + ", " + closestGrass.getY() + ")");
        } else {
            System.out.println("–ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ Grass –Ω–∞ –∫–∞—Ä—Ç–µ.");
        }
    }

    // –ú–µ—Ç–æ–¥ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Å—É—â–Ω–æ—Å—Ç—è–º–∏
    private double getDistance(Entity e1, Entity e2) {
        int dx = e1.getX() - e2.getX();
        int dy = e1.getY() - e2.getY();
        return Math.sqrt(dx * dx + dy * dy);
    }

    @Override
    public void makeMove(SimulationMap map) {


        int oldX = this.getX();
        int oldY = this.getY();

        // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è —Ç—Ä–∞–≤–æ—è–¥–Ω–æ–≥–æ
        int newX = oldX + 1;
        int newY = oldY;

        findClosestGrass();

        // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∫–∞—Ä—Ç—ã
        if (map.isWithinBounds(newX, newY)) {
            // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–≤–æ–±–æ–¥–Ω–∞ –ª–∏ –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
            if (map.getObject(newX, newY) == null)  {
                // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
                map.moveCreature(this, newX, newY);
            }
        }
        else
        {
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Herbivore –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —Ö–æ–¥–∞
            // ...
        }
        map.updateEntityLocation(this, oldX, oldY);
        System.out.println("Herbivore moving");
    }

}